generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  DELIVERYMAN
}

model User {
  id       String  @id @default(uuid())
  name     String
  cpf      String  @unique
  password String
  role     Role?    @default(DELIVERYMAN)
  orders   Order[]

  @@map("users")
}

model Recipient {
  id           String         @id @default(uuid())
  name         String
  email        String         @unique
  password     String
  slug         String         @unique
  city         String
  neighborhood String
  houseNumber  Int
  latitude     Decimal
  longitude    Decimal
  orders       Order[]
  Notification Notification[]

  @@map("recipients")
}

model Order {
  id           String    @id @default(uuid())
  userId       String?   @map("user_id")
  recipientId  String    @map("recipient_id")
  attachmentId String?   @map("attachment_id")
  title        String
  status       String    @default("aguardando informações")
  createdAt    DateTime  @default(now()) @map("created_at")
  updatedAt    DateTime? @updatedAt @map("updated_at")

  user       User?       @relation(fields: [userId], references: [id])
  recipient  Recipient   @relation(fields: [recipientId], references: [id])
  attachment Attachment? @relation(fields: [attachmentId], references: [id])

  @@map("orders")
}

model Attachment {
  id      String  @id @default(uuid())
  title   String
  url     String
  orderId String? @unique @map("order_id")
  Order   Order[]

  @@map("attachments")
}

model Notification {
  id          String    @id @default(uuid())
  recipientId String    @unique @map("recipient_id")
  title       String
  content     String
  readAt      DateTime? @map("read_at")
  createdAt   DateTime  @default(now()) @map("created_at")

  recipient Recipient @relation(fields: [recipientId], references: [id])

  @@map("notifications")
}
